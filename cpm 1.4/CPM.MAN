TYPE CP/M.MAN
        *****************************
        * OS-CP/M MINI USERS MANUAL *
        *****************************



BOOT PROCEDURE:
---------------

        1) BOOT DISKETTE AS NORMAL.
        2) THE FOLLOWING HARDWARE REQUIREMENTS MUST BE MET:

                - 510 CPU BOARD WITH SOFTWARE SWITCH AND SWAPPABLE RAM.
                - 48 KILO BYTES OF RAM.
                - 4K OF RAM AT $D000 TO $DFFF.
                - 4K OF RAM AT $E000 TO $EFFF (HARD DISK RAM ACCEPTABLE).

NOTE: ALL INFORMATION IN THE CP/M AND MICROSOFT MANUALS APPLY.


MICROSOFT EXTENDED DISK BASIC:
------------------------------

        THE BASIC CAN BE STARTED IN ONE OF TWO WAYS:

                - A>MBASIC       WHICH SIMPLY LOADS AND RUNS BASIC.

                - A>MBASIC <FILE NAME>  WHICH LOADS BASIC, AND RUNS
                                        THE PROGRAM IN <FILE NAME>.

        PROGRAMS ARE SAVED AS FOLLOWS UNDER THE EXTENTION .BAS:

                SAVE "<FILE NAME>"

        PROGRAMS ARE LOADED AS FOLLOWS, FILE NAME DEFAULTS TO .BAS

                LOAD "<FILE NAME>"


MICROSOFT FORTRAN IV COMPILER:
------------------------------

        THE COMPILER IS INVOKED BY THE FOLLOWING COMMAND:

                F80 <OBJECT FILE>,<LIST FILE>=<SOURCE FILE>

                        - THE DEFAULT EXTENTIONS ARE:

                                <OBJECT FILE>   .REL
                                <LIST FILE>     .PRN
                                <SOURCE FILE>   .FOR

                        - THE OTHER FORMS CAN BE:

                                F80 <OBJECT FILE>=<SOURCE FILE>

                                                OR

                                F80 ,<LIST FILE>=<SOURCE FILE>

                                                OR

                                F80 ,=<SOURCE FILE>



        THE COMPILER GENERATES A RELOCATABLE FILE WHICH MUST BE
LINKED TO THE FORTRAN LIBRARY TO RUN.  THE LINKING CAN BE DONE
IN A LOAD AND GO FASHION, OR A LOAD AND EXIT SO A CORE IMAGE SAVE
CAN BE DONE.  THE /G SWITCH MEANS LOAD AND GO.  THE /E SWITCH
MEANS LOAD AND EXIT.

                THE LINKING IS DONE AS FOLLOWS:

                        L80 <OBJECT FILE>/G

                                OR

                        L80 <OBJECT FILE>/E


        WITH THE /E SWITCH THE LOADER PRINTS OUT 3 NUMBERS.  THE THIRD
IS A COUNT OF HOW MANY PAGES TO USE FOR THE SAVE COMMAND.

                - A CORE IMAGE AFTER THE /E OPTION CAN BE SAVE AS FOLLOWS:

                        SAVE <PAGE COUNT> <TASK FILE>



MICROSOFT MACRO 80 ASSEMBLER:
-----------------------------

        THE ASSEMBLER IS INVOKED IN THE SAME MANNER AS FORTRAN AND THE
FILES GENERATED ARE HANDLED THE SAME.  IE. MUST BE RUN USING L80.


MICROSOFT COBOL COMPILER:
-------------------------

        THE COBOL COMPILER IS INVOKED IN THE SAME MANNER AS FORTRAN AND
THE FILES ARE HANDLED THE SAME.  IE. MUST BE RUN USING L80.



CP/M FEATURES:
--------------


TYPE <FILENAME>         PRINTS CONTENTS OF ASCII FILE, <FILENAME>
                        ON CONSOLE TERMINAL.

DIR                     PRINTS ENTIRE DIRECTORY.

DIR TEST.*              PRINTS DIRECTORY OF ALL FILES WITH NAME "TEST" AND
                        ANY EXTENTION.

DIR *.PRN               PRINTS DIRECTORY OF ALL FILES WITH THE EXTENTION .PRN

PIP LPT:=<FILENAME>[T8] PRINTS CONTENTS OF FILE, <FILENAME> ON LINEPRINTER
                        WITH TABS EXPANDED TO 8 COLUMNS.  PIP STANDS FOR 
                        PERIPHERAL INTERCHANGE PROGRAM.  IT CAN BE USED TO
                        TRANSFER INFORMATION BETWEEN DEVICES AND FILES.
                        FOR EXAMPLE: PIP CON:=<FILENAME> WILL DO THE SAME AS
                        TYPE <FILENAME>.  PIP LPT:=CON: WILL COPY EVERYTHING
                        FROM THE CONSOLE TO THE LINEPRINTER UNTIL A CONTROL-Z
                        IS TYPED.  SIMILARLY, PIP <FILENAME>=CON: WILL COPY
                        EVERYTHING FROM THE CONSOLE TO THE FILE, <FILENAME>
                        UP UNTIL A CONTROL-Z IS TYPED. PIP <FILE 1>=<FILE 2>
                        PERMITS FILE COPYING.

ERA TEST.PRN            DELETE FILE, "TEST.PRN".

REN EXAMPL.FOR=TEST.FOR RENAME "TEST.FOR" TO "EXAMPL.FOR".

STAT *.*                TYPE DISK USAGE INFORMATION.
 
SAVE <PAGE COUNT> <FILENAME>  SAVES <PAGE COUNT> PAGES FROM THE TRANSIENT
                        PROGRAM AREA IN THE FILE <FILENAME>.
 
NOTE:  NEW FILES UP TO 36K CAN BE MOVED FROM ANOTHER SYSTEM TO CP/M BY
       LOADING THEM INTO RAM AT HEX 3000, BOOTING CP/M AND IMMEDIATELY
       TYPING THE APPROPRIATE 'SAVE' COMMAND.  THE CP/M COLD START WILL
       HAVE MOVED THE FILE FROM 3000 DOWN TO THE START OF THE TRANSIENT
       PROGRAM AREA AT HEX 100 FROM WHERE IT IS 'SAVED'.


DDT USAGE:
----------

        DDT STANDS FOR DYNAMIC DEBUGGING TOOL.  IT IS USED TO DEBUG
ASSEMBLY PROGRAMS.  IT CAN BE INVOKED IN THE FOLLOWING TWO WAYS:

        DDT

        OR

        DDT <FILENAME>

THE FORMER SIMPLY RUNS DDT.  THE LATTER RUNS DDT AND LOAD THE OBJECT FILE
<FILENAME> INTO MEMORY AT 100 (HEX).  THE FOLLOWING ARE A FEW COMMANDS:


        DNNNN,MMMM      DUMP MEMORY FROM LOCATIONS NNNN TO MMMM.

        GNNNN           GO TO LOCATION NNNN AND EXECUTE PROGRAM THERE.

        LNNNN,MMMM      DISASSEMBLE MEMORY FROM LOCATION NNNN TO MMMM.

        SNNNN           OPEN MEMORY LOCATION NNNN FOR MODIFICATION.
                        SIMILAR TO THE EXTENDED MONITOR'S # COMMAND.
                        TYPING A NUMBER AND RETURN PLACES THAT NUMBER 
                        IN THE CURRENTLY OPEN LOCATION.  TYPING JUST A
                        RETURN OPENS THE NEXT LOCATION.  TYPING A .
                        EXITS THE OPEN MODE.



CP/M EDITOR USAGE:
------------------

        THE EDITOR IS INVOKED WITH THE FOLLOWING COMMAND LINE:

                ED <FILENAME>

        IF THE FILE DOES NOT EXIST THE EDITOR WILL SAY SO AND CREATE
A NEW FILE.  OTHERWISE THE OLD FILE IS OPENED.  THE EDITOR WILL PROMPT
WITH A "*".  THE TEXT IN THE FILE HAS TO BE READ INTO THE INTERNAL BUFFER
WITH THE "A" COMMAND.  TYPE <LINE COUNT>A TO READ <LINE COUNT> NUMBER
OF LINES INTO THE BUFFER FOR EDITING.  THE FOLLOWING COMMANDS ARE A SIMPLE
SUBSET TO PERMIT EASY LINE ORIENTED EDITING:

B               MOVE TO BEGINING OF BUFFER.

<LINE COUNT>T   TYPE <LINE COUNT> NUMBER OF LINES.

<CR>            A SIMPLE RETURN MOVES YOU ONE LINE DOWN IN BUFFER AT A TIME.

I               PLACES YOU IN INSERT MODE WHERE EVERYTHING WHICH IS TYPED
                WILL BE PLACED BEFORE THE LAST LINE TYPED.  TYPE A CONTROL-Z
                TO EXIT THE INSERT MODE.

E               EXIT THE EDITOR.  CLOSE OLD FILE AND RENAME IT WITH THE EXTENTION
                .BAK AND CLOSE THE CREATED FILE UNDER THE OLD NAME.

-<LINE COUNT>L  MOVE BACKWARDS <LINE COUNT> NUMBER OF LINES.

<LINE COUNT>L   MOVE FORWARD <LINE COUNT> NUMBER OF LINES.

<LINE NUMBER>:T TYPE LINE NUMBER <LINE NUMBER> AND POSITION POINTER AT IT.

K               DELETE CURRENT LINE.

S<TEXT 1>^Z<TEXT 2>     SUBSTITUTE THE STRING <TEXT 2> FOR THE
                                STRING <TEXT 1> IN THE CURRENT LINE.

-B              MOVE TO BOTTOM OF BUFFER

F<TEXT>         FIND FIRST OCCURANCE OF STRING, <TEXT>

Q               QUIT WITH NO FILE CHANGES.

A>